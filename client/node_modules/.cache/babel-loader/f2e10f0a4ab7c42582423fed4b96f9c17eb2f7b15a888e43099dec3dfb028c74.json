{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajnim\\\\SWMG\\\\client\\\\src\\\\components\\\\Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport styles from \"../styles/feed.module.css\";\nimport Share from \"./Share.jsx\";\nimport Post from \"./Post.jsx\";\nimport axios from '../utils/client.js';\nimport { AuthContext } from '../context/AuthContext';\n// import { Posts } from \"../dummyData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed({\n  username\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  //  const [text,setText] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      console.log(\"feed rendered\");\n      const res = username ? await axios.get(\"/posts/profile/\" + username) : await axios.get(\"posts/timeline/\" + user._id); //61b0fca4c2f0af06bd33fb3f\n      //console.log(res);\n      setPosts(res.data.sort((p1, p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt);\n      }));\n    };\n    fetchPosts();\n  }, [username, user._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.feed,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.feedWrapper,\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 63\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        post: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Feed, \"omHF6PJyNAaQxhbtLbXyaS78q/s=\");\n_c = Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useContext","useEffect","useState","styles","Share","Post","axios","AuthContext","jsxDEV","_jsxDEV","Feed","username","_s","posts","setPosts","user","fetchPosts","console","log","res","get","_id","data","sort","p1","p2","Date","createdAt","className","feed","children","feedWrapper","fileName","_jsxFileName","lineNumber","columnNumber","map","p","post","_c","$RefreshReg$"],"sources":["C:/Users/ajnim/SWMG/client/src/components/Feed.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport styles from \"../styles/feed.module.css\";\r\nimport Share from \"./Share.jsx\";\r\nimport Post from \"./Post.jsx\"\r\nimport axios from '../utils/client.js';\r\nimport { AuthContext } from '../context/AuthContext';\r\n// import { Posts } from \"../dummyData.js\";\r\n\r\nexport default function Feed({ username }) {\r\n    const [posts, setPosts] = useState([]);\r\n    //  const [text,setText] = useState(\"\");\r\n    const { user } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            console.log(\"feed rendered\");\r\n            const res = username\r\n                ? await axios.get(\"/posts/profile/\" + username)\r\n                : await axios.get(\"posts/timeline/\" + user._id); //61b0fca4c2f0af06bd33fb3f\r\n            //console.log(res);\r\n            setPosts(\r\n                res.data.sort((p1, p2) => {\r\n                    return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n                })\r\n            );\r\n        };\r\n        fetchPosts();\r\n    }, [username, user._id]);\r\n\r\n    return (\r\n        <div className={styles.feed}>\r\n            <div className={styles.feedWrapper}>\r\n                {(!username || username === user.username) && <Share />}\r\n                {posts.map((p) => (\r\n                    <Post key={p._id} post={p} />\r\n                )\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,WAAW,QAAQ,wBAAwB;AACpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAM;IAAEa;EAAK,CAAC,GAAGf,UAAU,CAACO,WAAW,CAAC;EAExCN,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAMC,GAAG,GAAGR,QAAQ,GACd,MAAML,KAAK,CAACc,GAAG,CAAC,iBAAiB,GAAGT,QAAQ,CAAC,GAC7C,MAAML,KAAK,CAACc,GAAG,CAAC,iBAAiB,GAAGL,IAAI,CAACM,GAAG,CAAC,CAAC,CAAC;MACrD;MACAP,QAAQ,CACJK,GAAG,CAACG,IAAI,CAACC,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK;QACtB,OAAO,IAAIC,IAAI,CAACD,EAAE,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,EAAE,CAACG,SAAS,CAAC;MAC1D,CAAC,CACL,CAAC;IACL,CAAC;IACDX,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,QAAQ,EAAEI,IAAI,CAACM,GAAG,CAAC,CAAC;EAExB,oBACIZ,OAAA;IAAKmB,SAAS,EAAEzB,MAAM,CAAC0B,IAAK;IAAAC,QAAA,eACxBrB,OAAA;MAAKmB,SAAS,EAAEzB,MAAM,CAAC4B,WAAY;MAAAD,QAAA,GAC9B,CAAC,CAACnB,QAAQ,IAAIA,QAAQ,KAAKI,IAAI,CAACJ,QAAQ,kBAAKF,OAAA,CAACL,KAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtDtB,KAAK,CAACuB,GAAG,CAAEC,CAAC,iBACT5B,OAAA,CAACJ,IAAI;QAAaiC,IAAI,EAAED;MAAE,GAAfA,CAAC,CAAChB,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAEhC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CAjCuBF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}